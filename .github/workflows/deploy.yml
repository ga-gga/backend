name: Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'none'
        type: choice
        options:
          - production
      confirm:
        description: 'I confirm this deployment'
        required: true
        type: boolean
        default: false

jobs:
  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run lint

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: |
      github.ref == 'refs/heads/main' &&
      github.event_name == 'workflow_dispatch' &&
      github.event.inputs.confirm == 'true'

    steps:
      - uses: actions/checkout@v4

      - name: Deployment confirmation
        run: |
          echo "Deployment initiated"
          echo "Event: ${{ github.event_name }}"
          echo "Environment: ${{ github.event.inputs.environment || 'production' }}"
          echo "Triggered by: ${{ github.actor }}"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --only=production

      - name: Create deployment package
        run: |
          zip -r deployment.zip . \
            -x "node_modules/*" \
            -x ".git/*" \
            -x ".github/*" \
            -x "*.md" \
            -x ".env*" \
            -x ".eslintrc*" \
            -x "test/*"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3
        run: |
          aws s3 cp deployment.zip s3://${{ secrets.S3_BUCKET_NAME }}/deployments/gagga-app-${{ github.sha }}.zip

      - name: Deploy with CodeDeploy
        id: deploy
        run: |
          DEPLOYMENT_ID=$(aws deploy create-deployment \
            --application-name ${{ secrets.CODEDEPLOY_APPLICATION_NAME }} \
            --deployment-group-name ${{ secrets.CODEDEPLOY_DEPLOYMENT_GROUP }} \
            --s3-location bucket=${{ secrets.S3_BUCKET_NAME }},key=deployments/gagga-app-${{ github.sha }}.zip,bundleType=zip \
            --deployment-config-name CodeDeployDefault.AllAtOne \
            --description "Deployment from GitHub Actions - ${{ github.sha }}" \
            --query "deploymentId" --output text)

          echo "deployment-id=$DEPLOYMENT_ID" >> $GITHUB_OUTPUT

      - name: Wait for deployment
        run: |
          aws deploy wait deployment-successful \
            --deployment-id ${{ steps.deploy.outputs.deployment-id }}

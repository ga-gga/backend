name: PR Validator

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

jobs:
  validate:
    name: Lint & Startup Validator
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23'
          cache: 'npm'

      - name: Install dependencies
        id: install
        run: |
          npm ci
          echo "✅ Dependencies installed successfully"
        continue-on-error: true

      - name: Run ESLint
        id: lint
        run: |
          npm run lint
          echo "✅ ESLint check passed"
        continue-on-error: true

      - name: Check server startup
        id: startup
        run: |
          timeout 5s npm start || true
          echo "✅ Server startup check completed"
        env:
          NODE_ENV: production
        continue-on-error: true

      - name: Validation Summary
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const steps = [
              { name: 'Dependencies', outcome: '${{ steps.install.outcome }}' },
              { name: 'ESLint', outcome: '${{ steps.lint.outcome }}' },
              { name: 'Server Startup', outcome: '${{ steps.startup.outcome }}' }
            ];

            let summary = '### PR 검증 결과\n\n';

            steps.forEach(step => {
              const icon = step.outcome === 'success' ? '✅' : '❌';
              summary += `- ${icon} ${step.name}\n`;
            });

            summary += `[상세 로그 확인](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });

      - name: Fail if any step failed
        run: |
          if [[ "${{ steps.install.outcome }}" != "success" ]] || 
              [[ "${{ steps.lint.outcome }}" != "success" ]] || 
              [[ "${{ steps.startup.outcome }}" != "success" ]]; then
            echo "❌ One or more validation steps failed"
            exit 1
          fi
          echo "✅ All validation steps passed"
